name: Android Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Gradle wrapper permissions
        run: chmod +x ./gradlew

      - name: Write local.properties (API keys)
        run: |
          printf "\nOPENWEATHER_API_KEY=%s\n" "${{ secrets.OWM_API_KEY }}" > local.properties

      - name: Verify local.properties exists
        run: |
          ls -la
          test -s local.properties || (echo "local.properties missing or empty" && exit 1)

      - name: Mask API key values
        run: |
          OWM=$(awk -F= '/^OPENWEATHER_API_KEY=/{print $2}' local.properties)
          [ -n "$OWM" ] && echo "::add-mask::$OWM"

      - name: Validate API keys presence (length only)
        run: |
          awk -F= '
            BEGIN{rc=0}
            $1=="OPENWEATHER_API_KEY"{ if (length($2)>10) print "OPENWEATHER_API_KEY OK (len=" length($2) ")"; else { print "OPENWEATHER_API_KEY missing/too short"; rc=1 } }
            END{exit rc}
          ' local.properties

      - name: Decode signing keystore
        run: |
          mkdir -p app
          printf '%s' "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > app/signing.keystore

      - name: Verify keystore file
        run: |
          ls -l app/signing.keystore
          test -s app/signing.keystore || (echo "Keystore is empty or missing" && exit 1)    

      - name: Verify signing secrets presence
        run: |
          test -n "${{ secrets.SIGNING_STORE_PASSWORD }}" || (echo "SIGNING_STORE_PASSWORD is empty" && exit 1)
          test -n "${{ secrets.SIGNING_KEY_ALIAS }}" || (echo "SIGNING_KEY_ALIAS is empty" && exit 1)
          test -n "${{ secrets.SIGNING_KEY_PASSWORD }}" || (echo "SIGNING_KEY_PASSWORD is empty" && exit 1)

      - name: keytool sanity check (no secrets printed)
        run: |
          set +e
          keytool -list -keystore app/signing.keystore -storepass "${{ secrets.SIGNING_STORE_PASSWORD }}" | head -n 20
          EC=$?
          if [ $EC -ne 0 ]; then
            echo "keytool failed. Wrong store password or corrupted keystore."
            exit 1
          fi

      - name: Build release bundle
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: |
          ./gradlew --stacktrace --no-daemon :app:bundleRelease

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app/build/outputs/bundle/release/*.aab
